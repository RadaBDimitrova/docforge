#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

# For the check step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

if [[ -z "${SOURCE_PATH}" ]]; then
  SOURCE_PATH="$(${READLINK_BIN} -f "$(dirname "${0}")/..")"
  export SOURCE_PATH
else
  SOURCE_PATH="$(${READLINK_BIN} -f "${SOURCE_PATH}")"
  export SOURCE_PATH
fi

cd "${SOURCE_PATH}"

# Build Golint.
go install golang.org/x/lint/golint@latest

executable="${GOPATH}/bin/golint"
if [ -z ${GOPATH+x} ]; then
  echo "GOPATH not set. Trying with HOME/go/bin"
  if [ -f "${HOME}/go/bin/golint" ]; then
    executable="${HOME}/go/bin/golint"
  else
    echo "HOME/go/bin/golint not found. Set GOPATH"
    Exit 1
  fi
fi

go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.61.0

###############################################################################
PACKAGES="$(go list -e ./...)"
PACKAGES_DIRS="${PACKAGES//github.com\/gardener\/docforge/.}"

# Execute static code checks.
echo "Executing go vet"
# shellcheck disable=SC2086
go vet ${PACKAGES}

# Execute automatic code formatting directive.
# shellcheck disable=SC2086
gofmt -l -w ${PACKAGES_DIRS}

echo "Executing lint checks"
golangci-lint run
for package in ${PACKAGES_DIRS}; do
  # shellcheck disable=SC2046
  $executable -set_exit_status $(find "$package" -maxdepth 1 -name "*.go" | grep -vE '_test.go')
done

echo "Done"